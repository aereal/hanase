---

# TODO: Check whether already installed or not
-
  get_url:
    dest: /tmp/kibana.tar.gz
    url: "https://download.elastic.co/kibana/kibana/kibana-{{ kibana_version_name }}.tar.gz"

-
  name: Prepare kibana user and group
  user:
    name: "{{ kibana_user }}"
    group: "{{ kibana_group }}"
    shell: /usr/sbin/nologin
    state: present
    createhome: no

-
  name: Prepare log directory
  file:
    group: "{{ kibana_group }}"
    owner: "{{ kibana_user }}"
    path: "{{ kibana_log_path | dirname }}"
    recurse: yes
    state: directory

-
  name: Prepare destination directory
  file:
    group: "{{ kibana_group }}"
    owner: "{{ kibana_user }}"
    path: "{{ kibana_root_path }}"
    recurse: yes
    state: directory

-
  name: Unarchive
  unarchive:
    dest: "{{ kibana_root_path }}"
    group: "{{ kibana_group }}"
    owner: "{{ kibana_user }}"
    src: /tmp/kibana.tar.gz
    copy: no

-
  name: Symlink
  file:
    group: "{{ kibana_group }}"
    owner: "{{ kibana_user }}"
    dest: "{{ kibana_root_path }}/latest"
    src: "{{ kibana_root_path }}/kibana-{{ kibana_version_name }}"
    state: link

-
  name: Prepare config directory
  file:
    group: "{{ kibana_group }}"
    owner: "{{ kibana_user }}"
    path: "{{ kibana_root_path }}/etc"
    recurse: yes
    state: directory

-
  name: Install config
  template:
    dest: "{{ kibana_root_path }}/etc/kibana.yml"
    src: kibana.yml.j2
    group: "{{ kibana_group }}"
    owner: "{{ kibana_user }}"

-
  name: Install supervisor config
  template:
    dest: /etc/supervisor/conf.d/kibana.conf
    src: kibana.conf.j2
    group: root
    owner: root
  notify:
    - Restart supervisor

-
  name: Start kibana
  supervisorctl:
    name: kibana
    state: started
  sudo: yes
